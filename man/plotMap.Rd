% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/choropleth-map-fns.R
\name{plotMap}
\alias{plotMap}
\title{Plot a choropleth map}
\usage{
plotMap(data, variable, title, qtiles = 5, breaks = NA,
  london_only = FALSE, greyscale = FALSE)
}
\arguments{
\item{data}{A spatial polygons data frame. The map produced will be at the
county level if the column name \code{county} is present otherwise the map
will be at the level of the provided geography.}

\item{variable}{the name of the variable on the basis of which the map
should be themed}

\item{title}{the title to display on the map}

\item{qtiles}{the number of quantiles to split \code{variable} into. Note:
if \code{breaks} is specified, \code{qtiles} is ignored. By default
\code{variable} is split into quintiles.}

\item{breaks}{the (ordered) breaks on which to split \code{variable}, for
\code{n} splits \code{n+1} breaks must be specified. If \code{breaks} is
specified (other than \code{NA}), \code{qtiles} are ignored.}

\item{london_only}{boolean; for county level maps only (otherwise ignored),
should only the London counties be displayed? Default is \code{FALSE}.}

\item{greyscale}{boolean; should the plot be in greyscale only?

If \code{breaks} is specified, \code{qtiles} is ignored.}
}
\value{
A choropleth map at the county level if the supplied \code{data}
contained the column name \code{county}; otherwise a choropleth map
at the level of the provided geography.
}
\description{
This function will attempt to plot a choropleth map using the data provided
to it.
}
\examples{
\dontrun{
# example county-level data
county_data <- data.frame(county = county_boundary_data$county,
                          deaths = round(rnorm(length(county_boundary_data$county), 30, 8)))
# example ambulance-level data
service_data <- data.frame(service = ambulance_boundary_data$service,
                           hoaxes = round(rnorm(length(ambulance_boundary_data$service), 70, 8)))
service_data <- service_data[service_data$service != "IOW", ]

# merge numeric data and spatial data
county_data_spatial <- merge(county_boundary_data, county_data, by = "county")
service_data_spatial <- merge(ambulance_boundary_data, service_data, by = "service")

# make some nice maps
plotMap(county_data_spatial, "deaths", "My lovely map")
plotMap(county_data_spatial, "deaths", "My lovely map", london_only = TRUE)
plotMap(service_data_spatial, "hoaxes", "My lovely map", breaks = c(57, 65, 73, 83))
}
}

